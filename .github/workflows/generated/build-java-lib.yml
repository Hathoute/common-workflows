name: Deploy Java Library
'on':
  workflow_call:
    inputs:
      jdk-version:
        description: The JDK version to use (8, 11, 15, ...)
        required: true
        default: '17'
        type: string
      java-build-tool:
        description: The build tool to use (maven or gradle)
        required: true
        default: maven
        type: string
      release-version:
        description: >-
          Release version to tag the release with. Ignored if running from a
          pull request.
        required: false
        default: ''
        type: string
    secrets:
      GITHUB_TOKEN:
        description: Github Token.
        required: true
jobs:
  lint-commits:
    runs-on: ubuntu-latest
    steps:
      - name: Lint commits
        uses: actions-ecosystem/action-lint-commits@v1
        id: lint-commits
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          regex: '^\w+(\(.+\))?: .+'
          format: markdown
      - name: Fail immediately if not a pull request
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          echo "::error::Commit messages don't pass lint."
          echo "::error::${{ steps.lint-commits.outputs.unmatched_commits }}"
          exit 1
      - name: Post warning comment
        uses: Hathoute/action-create-comment@v1.0.4
        if: ${{ steps.lint-commits.outputs.unmatched_commits != '' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          comment_uid: 513522
          body: >
            The following commits needs their message changes:


            ${{ steps.lint-commits.outputs.unmatched_commits }}


            The format `<type>(<scope>): <subject>` (`^\w+(\(.+\))?: .+`) is
            acceptable. e.g., `feat(api): Add /users/get`
      - name: Post valid comment
        uses: Hathoute/action-create-comment@v1.0.4
        if: ${{ steps.lint-commits.outputs.unmatched_commits == '' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          comment_uid: 513522
          body: |
            All the commit messages are valid.

            ✔️ Lint passed.
      - name: Fail when commits don't pass lint
        if: ${{ steps.lint-commits.outputs.unmatched_commits != '' }}
        run: >
          echo "::error::Commit messages don't pass lint, check the comment on
          the PR for more details."

          exit 1
    if: ${{ github.event_name == 'pull_request' }}
  format-release-version:
    runs-on: ubuntu-latest
    steps:
      - name: Format release version for PR
        if: ${{ github.event_name == 'pull_request' }}
        id: pull-request
        run: echo "version=${{ github.base_ref }}" >> $GITHUB_ENV
      - name: Format release version for release
        if: ${{ github.event_name != 'pull_request' }}
        id: release
        run: echo "version=${{ env.RELEASE_VERSION }}" >> $GITHUB_ENV
      - name: Unify
        id: unified
        run: echo "release_version=${{ env.version }}" >> $GITHUB_OUTPUT
    outputs:
      release_version: ${{ steps.unified.outputs.release_version }}
  deploy-java-maven:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - run: echo "internal_build_tool=maven" >> $GITHUB_ENV
      - name: Set up JDK ${{ JAVA_JDK_VERSION }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ JAVA_JDK_VERSION }}
          cache: ${{ env.internal_build_tool }}
      - name: Deploy with Maven
        run: mvn -Drevision="${{ JAVA_BUILD_VERSION }}" -B deploy --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
