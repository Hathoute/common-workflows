name: Test Build Workflows

on:
  push:
    branches:
      - '*'         # We don't want to target dependabot branches, which usually have a '/'
      - '!main'
      - '!generated/*'
    paths:
      - 'src/**'        # Test build workflows when a template/workflow is changed

jobs:
  generate-workflows:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Generate workflows
        uses: Hathoute/workflow-preprocessor@1.0.2
        with:
          generated-directory: './generated'
      - uses: actions/upload-artifact@v3
        with:
          name: generated-workflows
          path: generated
          retention-days: 1
  generated-branch:
    name: Create or update generated branch
    runs-on: ubuntu-latest
    needs: [generate-workflows]
    permissions:
      contents: write
    env:
      GENERATED_BRANCH: generated/${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.ref_name }}
      - name: Checkout to branch
        run: |    # TODO: do we even need to delete the branch (since we checkout elsewhere)
          if git show-ref --verify --quiet "refs/heads/${{ env.GENERATED_BRANCH }}"; then
            echo 'Deleting existing local branch';
            git branch -D '${{ env.GENERATED_BRANCH }}';
          fi
          git checkout -b '${{ env.GENERATED_BRANCH }}'
      - name: Remove possibly existing generated workflows
        run: rm -rf generated
      - uses: actions/download-artifact@v3
        with:
          name: generated-workflows
          path: generated
      - name: Push changes to branch
        run: |
          git config user.email whitesmith.thedj@gmail.com
          git config user.name 'Hathoute (auto)'
          git add generated
          git commit -m 'chore: add built workflow'
          git push -f --set-upstream origin '${{ env.GENERATED_BRANCH }}'

  generated-pr:
    name: Create pull request if not exists
    runs-on: ubuntu-latest
    needs: [generated-branch]
    permissions:
      pull-requests: write
    env:
      GENERATED_BRANCH: generated/${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.GENERATED_BRANCH }}
      - run: |
          echo "::debug::Creating new PR:"
          echo "::debug::   - repository: $REPO_NAME"
          echo "::debug::   - branch:     $BRANCH_NAME"
          echo "::debug::   - assignee:   $BRANCH_OWNER"
          MESSAGE=$( gh pr create --repo $REPO_NAME --assignee $BRANCH_OWNER --head $BRANCH_NAME --draft --title "$PR_TITLE" --body "Auto PR" 2>&1 >/dev/null )
          if [ $? = 0 ] || echo $MESSAGE | grep -q "a pull request for branch .* into branch .* already exists" 
          then
            exit 0
          elif echo $MESSAGE | grep -q "Draft pull requests are not supported" 
          then
            echo "::debug::Repository does not support draft pull requests"
            gh pr create --repo $REPO_NAME --assignee $BRANCH_OWNER --head "generated/$BRANCH_NAME" --title "$BRANCH_NAME" --body "Auto PR"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: ${{ env.GENERATED_BRANCH }}
          BRANCH_OWNER: ${{ github.actor }}
          REPO_NAME: ${{ github.repository }}
          PR_TITLE: "Generated workflows for ${{ github.ref_name }}"